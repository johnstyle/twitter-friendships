#!/usr/bin/env php
<?php

use Core\Console;
use Core\Model;
use Core\TwitterApi;
use Model\Actions\Unfollowed;

/** @var TwitterApi $api */
$api = include __DIR__ . '/../bootstrap.php';

$followers    = Model::getList('followers');
$friends      = Model::getList('friends');
$whitelist    = Model::getList('whitelist');
$followed     = Model::getList('actions/followed');

if (!count($followers)
    || !count($friends)) {

    exit;
}

$nowDate      = (new \DateTime())->format('Y-m-d');
$followedDate = (new \DateTime())->modify('-' . DEFAULT_UNFOLLOW_DAYS . ' days')->format('Y-m-d');

$destroyUsers = array_diff_key($friends, $followers, $whitelist);
$destroyTotal = count($destroyUsers);
$destroyCount = 0;

if ($destroyUsers) {

    Unfollowed::load();

    Console::header('Unfollow users');

    foreach ($destroyUsers as $userId => $user) {

        if (!array_key_exists($userId, $friends)
            || !array_key_exists($userId, $followed)
            || (new \DateTime($followed[$userId]['date']))->format('Y-m-d') > $followedDate) {

            continue;
        }

        Console::log($user);

        Unfollowed::sync([
            'id'   => $user['id'],
            'date' => $nowDate
        ]);

        // Unfollow
        $api->post('friendships/destroy', [
            'user_id' => $user['id'],
        ]);
        sleep(1);

        $destroyCount++;
    }

    Unfollowed::save();
}

Console::total($destroyCount, $destroyTotal);
